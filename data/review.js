const review = {
	List:[
		{
			nickname:'蹦迪老掌柜',
			avatar:'static/img/ava3.png',
			context:'如果仅仅是这样，我觉得，还不是最烂的代码吧。应该看起来还算正常，而且有详细的注释，让人充满希望，相信跟着你的思路走，用不了多少工夫就可以做出适合新需求的修改。但是在改的过程中，发现越来越多的问题，最后不得不停下手来再看一遍，再去写，最后发现是在写不下去，不得不推倒重来。。。总之，你人可以离开公司，但是你的传说必须在公司里面流传。大家每次看到你写的代码，都会感叹一句这个人真是厉害，或者每次出bug的时候，大家都会说这是xxx遗留的代码。'
		},
		{
			nickname:'O5-Yoe',
			avatar:'static/img/ava2.png',
			context:'从不测试。千万不要测试任何的出错处理，从来也不检测系统调用的返回值。永远不做性能测试。如果不够快就告诉用户换一个更快的机器。如果你一做测试，那么就可能会要改你的算法，甚至重设计，重新架构。不要写测试案例。不要做什么代码覆盖率测试，自动化测试。测试是懦夫行为。一个勇敢的程序员是根本不需要这一步的。如果你对你的代码有强大的信心，那还要什么测试呢？真正的程序员是不需要测试自己的代码的。'
		},
		{
			nickname:'潇湘晨报',
			avatar:'static/img/ava4.jpg',
			context:'《巴啦啦小魔仙》美琪扮演者孙侨潞心梗去世，年仅25岁中青年出现心肌梗塞的比例逐年增加。和老年人相比，年轻人发生心肌梗塞通常起病急骤，症状凶险，多无先兆不适而突然发病，易出现致死性心律失常，早期猝死率高。'
		},
		{
			nickname:'不吃早饭',
			avatar:'static/img/ava1.jpg',
			context:'忽悠。你会学会忽悠，就算你的代码写得很烂，你也要为其挂上GoF设计模式的标签，就算你的项目做得再烂，你也要为其挂上敏捷的标签，只有学会像中国Thoughtworks的咨询师那样去忽悠，你才能学会更炫更酷的方法，让整个团队和公司，甚至整个业界都开始躁动，这样才能真正为难维护的代码铺平道路。'
		}

	]
}

export default review